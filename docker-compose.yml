services:
  screengrabber_twitter_web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: screengrabber_twitter_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      # - ./static:/app/static
      # - ./media:/app/media
    env_file:
      - .env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - screengrabber_network

  screengrabber_nginx:
    image: nginx:1.27-alpine
    container_name: screengrabber_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/static:/usr/share/nginx/html/static
      - ./nginx/media:/usr/share/nginx/html/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - screengrabber_certbot
      - screengrabber_twitter_web
    networks:
      - screengrabber_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  screengrabber_certbot:
    image: certbot/certbot:v3.2.0
    container_name: screengrabber_certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  screengrabber_network:
    driver: bridge
